;These are the django-autogenerated tables which need to be created to integrate the backend and frontend with the database.


CREATE TABLE `django_session` (`session_key` varchar(40) NOT NULL PRIMARY KEY, `session_data` longtext NOT NULL, `expire_date` datetime(6) NOT NULL);
CREATE INDEX `django_session_expire_date_a5c62663` ON `django_session` (`expire_date`);
CREATE TABLE `django_content_type` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `name` varchar(100) NOT NULL, `app_label` varchar(100) NOT NULL, `model` varchar(100) NOT NULL);
ALTER TABLE `django_content_type` ADD CONSTRAINT `django_content_type_app_label_model_76bd3d3b_uniq` UNIQUE (`app_label`, `model`);
CREATE TABLE `auth_permission` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `name` varchar(50) NOT NULL, `content_type_id` integer NOT NULL, `codename` varchar(100) NOT NULL);
CREATE TABLE `auth_group` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `name` varchar(80) NOT NULL UNIQUE);
CREATE TABLE `auth_group_permissions` (`id` bigint AUTO_INCREMENT NOT NULL PRIMARY KEY, `group_id` integer NOT NULL, `permission_id` integer NOT NULL);
ALTER TABLE `auth_permission` ADD CONSTRAINT `auth_permission_content_type_id_codename_01ab375a_uniq` UNIQUE (`content_type_id`, `codename`);
ALTER TABLE `auth_permission` ADD CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`);
ALTER TABLE `auth_group_permissions` ADD CONSTRAINT `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` UNIQUE (`group_id`, `permission_id`);
ALTER TABLE `auth_group_permissions` ADD CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`);
ALTER TABLE `auth_group_permissions` ADD CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`);

;Below are the tables actually needed.
CREATE TABLE Authenticate (
    p_id INTEGER PRIMARY KEY,
    username VARCHAR(100) UNIQUE,
    password VARCHAR(15),
    user_type VARCHAR(30) CHECK (user_type IN ('Customer', 'Manager', 'DeliveryPerson'))
);

CREATE TABLE Address (
    add_id INTEGER PRIMARY KEY DEFAULT 0,
    address VARCHAR(255),
    zipcode VARCHAR(255)
);

CREATE TABLE Customer (
    customer_id INTEGER PRIMARY KEY,
    f_name VARCHAR(255),
    l_name VARCHAR(255),
    email VARCHAR(255),
    p_id INTEGER REFERENCES Authenticate(p_id)
);

CREATE TABLE CustAddress (
    customer_id INTEGER REFERENCES Customer(customer_id),
    add_id INTEGER REFERENCES Address(add_id),
    PRIMARY KEY (customer_id, add_id)
);

CREATE TABLE CustNos (
    customer_id INTEGER REFERENCES Customer(customer_id),
    ph_no VARCHAR(255),
    PRIMARY KEY (customer_id, ph_no)
);

CREATE TABLE Manager (
    manager_id INTEGER PRIMARY KEY,
    Name VARCHAR(255),
    email VARCHAR(255),
    p_id INTEGER REFERENCES Authenticate(p_id)
);

CREATE TABLE Restaurant (
    restaurant_id INTEGER PRIMARY KEY,
    addr_id INTEGER REFERENCES Address(add_id),
    man_id INTEGER REFERENCES Manager(manager_id),
    restaurant_name VARCHAR(255)
);

CREATE TABLE restPhNos (
    restaurant_id INTEGER REFERENCES Restaurant(restaurant_id),
    ph_no VARCHAR(255),
    PRIMARY KEY (restaurant_id, ph_no)
);

CREATE TABLE Orders (
    order_id INTEGER PRIMARY KEY,
    restaurant_id INTEGER REFERENCES Restaurant(restaurant_id),
    customer_id INTEGER REFERENCES Customer(customer_id),
    total_price INTEGER,
    ordered_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status_val VARCHAR(255) CHECK (status_val IN ('Processing', 'Out For Delivery', 'Delivered')) DEFAULT 'Processing'
);

CREATE TABLE Status (
    status_id INTEGER PRIMARY KEY,
    status_val VARCHAR(255) CHECK (status_val IN ('Processing', 'Out For Delivery', 'Delivered')) DEFAULT 'Processing'
);

CREATE TABLE Product (
    product_id INTEGER PRIMARY KEY,
    res_id INTEGER REFERENCES Restaurant(restaurant_id),
    item_name VARCHAR(255),
    price INTEGER,
    description VARCHAR(255)
);

CREATE TABLE orderProducts (
    order_id INTEGER REFERENCES Orders(order_id),
    product_id INTEGER REFERENCES Product(product_id),
    quantity INTEGER DEFAULT 1,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE Category (
    Category_id INTEGER PRIMARY KEY,
    Name VARCHAR(255)
);

CREATE TABLE Product_categ (
    prod_id INTEGER REFERENCES Product(product_id),
    cat_id INTEGER REFERENCES Category(Category_id),
    PRIMARY KEY (prod_id, cat_id)
);

CREATE TABLE deliveryPersonnel (
    personnel_id INTEGER PRIMARY KEY,
    name VARCHAR(255),
    p_id INTEGER REFERENCES Authenticate(p_id),
    addr_id INTEGER REFERENCES Address(add_id),
    phone VARCHAR(255)
);

CREATE TABLE RestaurantPersonnel (
    personnel INTEGER REFERENCES deliveryPersonnel(personnel_id),
    restaurant INTEGER REFERENCES Restaurant(restaurant_id),
    PRIMARY KEY (personnel, restaurant)
);

CREATE TABLE Availability (
    personnel INTEGER REFERENCES deliveryPersonnel(personnel_id),
    availability VARCHAR(255) CHECK (availability IN ('Delivering', 'Available')),
    PRIMARY KEY (personnel, availability)
);

CREATE TABLE ManNos (
    man_id INTEGER REFERENCES Manager(manager_id),
    ph_no VARCHAR(255),
    PRIMARY KEY (man_id, ph_no)
);
